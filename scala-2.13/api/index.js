Index.PACKAGES = {"dev" : [], "dev.jsbrucker" : [], "dev.jsbrucker.result" : [{"name" : "dev.jsbrucker.result.Err", "shortDescription" : "Contains the error value", "object" : "dev\/jsbrucker\/result\/Err$.html", "members_object" : [{"label" : "unit", "tail" : ": Err[Unit, Nothing]", "member" : "dev.jsbrucker.result.Err.unit", "link" : "dev\/jsbrucker\/result\/Err$.html#unit:dev.jsbrucker.result.Err[Unit,Nothing]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/jsbrucker\/result\/Err$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/jsbrucker\/result\/Err$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/jsbrucker\/result\/Err$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/jsbrucker\/result\/Err$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/jsbrucker\/result\/Err$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/jsbrucker\/result\/Err$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/jsbrucker\/result\/Err$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/Err$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/Err$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/Err$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/jsbrucker\/result\/Err$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/jsbrucker\/result\/Err$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/jsbrucker\/result\/Err$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/jsbrucker\/result\/Err$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/jsbrucker\/result\/Err$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/jsbrucker\/result\/Err$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dev\/jsbrucker\/result\/Err$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/Err$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/Err$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "intoErr", "tail" : "(): E", "member" : "dev.jsbrucker.result.Err.intoErr", "link" : "dev\/jsbrucker\/result\/Err.html#intoErr:E", "kind" : "def"}, {"member" : "dev.jsbrucker.result.Err#<init>", "error" : "unsupported entity"}, {"label" : "e", "tail" : ": E", "member" : "dev.jsbrucker.result.Err.e", "link" : "dev\/jsbrucker\/result\/Err.html#e:E", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "dev\/jsbrucker\/result\/Err.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "withErr", "tail" : "(): Result[F, T]", "member" : "dev.jsbrucker.result.Result.withErr", "link" : "dev\/jsbrucker\/result\/Err.html#withErr[F>:E]:dev.jsbrucker.result.Result[F,T]", "kind" : "def"}, {"label" : "withOk", "tail" : "(): Result[E, U]", "member" : "dev.jsbrucker.result.Result.withOk", "link" : "dev\/jsbrucker\/result\/Err.html#withOk[U>:T]:dev.jsbrucker.result.Result[E,U]", "kind" : "def"}, {"label" : "filterErrOrElse", "tail" : "(p: (E) => Boolean, default: => U): Result[E, U]", "member" : "dev.jsbrucker.result.Result.filterErrOrElse", "link" : "dev\/jsbrucker\/result\/Err.html#filterErrOrElse[U>:T](p:E=>Boolean,default:=>U):dev.jsbrucker.result.Result[E,U]", "kind" : "def"}, {"label" : "filterOrElse", "tail" : "(p: (T) => Boolean, default: => F): Result[F, T]", "member" : "dev.jsbrucker.result.Result.filterOrElse", "link" : "dev\/jsbrucker\/result\/Err.html#filterOrElse[F>:E](p:T=>Boolean,default:=>F):dev.jsbrucker.result.Result[F,T]", "kind" : "def"}, {"label" : "existsErr", "tail" : "(p: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.existsErr", "link" : "dev\/jsbrucker\/result\/Err.html#existsErr(p:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.exists", "link" : "dev\/jsbrucker\/result\/Err.html#exists(p:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "forallErr", "tail" : "(p: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.forallErr", "link" : "dev\/jsbrucker\/result\/Err.html#forallErr(p:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.forall", "link" : "dev\/jsbrucker\/result\/Err.html#forall(p:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreachErr", "tail" : "(op: (E) => F): Unit", "member" : "dev.jsbrucker.result.Result.foreachErr", "link" : "dev\/jsbrucker\/result\/Err.html#foreachErr[F](op:E=>F):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(op: (T) => U): Unit", "member" : "dev.jsbrucker.result.Result.foreach", "link" : "dev\/jsbrucker\/result\/Err.html#foreach[U](op:T=>U):Unit", "kind" : "def"}, {"label" : "inspectErr", "tail" : "(op: (E) => F): Unit", "member" : "dev.jsbrucker.result.Result.inspectErr", "link" : "dev\/jsbrucker\/result\/Err.html#inspectErr[F](op:E=>F):Unit", "kind" : "def"}, {"label" : "inspect", "tail" : "(op: (T) => U): Unit", "member" : "dev.jsbrucker.result.Result.inspect", "link" : "dev\/jsbrucker\/result\/Err.html#inspect[U](op:T=>U):Unit", "kind" : "def"}, {"label" : "flatMapErr", "tail" : "(op: (E) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flatMapErr", "link" : "dev\/jsbrucker\/result\/Err.html#flatMapErr[F,U>:T](op:E=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(op: (T) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flatMap", "link" : "dev\/jsbrucker\/result\/Err.html#flatMap[F>:E,U](op:T=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(op: (E) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.orElse", "link" : "dev\/jsbrucker\/result\/Err.html#orElse[F,U>:T](op:E=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "or", "tail" : "(rhs: => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.or", "link" : "dev\/jsbrucker\/result\/Err.html#or[F>:E,U>:T](rhs:=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "andThen", "tail" : "(op: (T) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.andThen", "link" : "dev\/jsbrucker\/result\/Err.html#andThen[F>:E,U](op:T=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "and", "tail" : "(rhs: => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.and", "link" : "dev\/jsbrucker\/result\/Err.html#and[F>:E,U>:T](rhs:=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "fold", "tail" : "(fErr: (E) => O, fOk: (T) => O): O", "member" : "dev.jsbrucker.result.Result.fold", "link" : "dev\/jsbrucker\/result\/Err.html#fold[O](fErr:E=>O,fOk:T=>O):O", "kind" : "def"}, {"label" : "joinErr", "tail" : "(ev: <:<[E, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.joinErr", "link" : "dev\/jsbrucker\/result\/Err.html#joinErr[F,U>:T](implicitev:E<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "joinOk", "tail" : "(ev: <:<[T, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.joinOk", "link" : "dev\/jsbrucker\/result\/Err.html#joinOk[F>:E,U](implicitev:T<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "flattenErr", "tail" : "(ev: <:<[E, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flattenErr", "link" : "dev\/jsbrucker\/result\/Err.html#flattenErr[F,U>:T](implicitev:E<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flatten", "link" : "dev\/jsbrucker\/result\/Err.html#flatten[F>:E,U](implicitev:T<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "mapErrOrElse", "tail" : "(default: (T) => F, f: (E) => F): F", "member" : "dev.jsbrucker.result.Result.mapErrOrElse", "link" : "dev\/jsbrucker\/result\/Err.html#mapErrOrElse[F](default:T=>F,f:E=>F):F", "kind" : "def"}, {"label" : "mapErrOr", "tail" : "(default: => F, f: (E) => F): F", "member" : "dev.jsbrucker.result.Result.mapErrOr", "link" : "dev\/jsbrucker\/result\/Err.html#mapErrOr[F](default:=>F,f:E=>F):F", "kind" : "def"}, {"label" : "mapErr", "tail" : "(op: (E) => F): Result[F, T]", "member" : "dev.jsbrucker.result.Result.mapErr", "link" : "dev\/jsbrucker\/result\/Err.html#mapErr[F](op:E=>F):dev.jsbrucker.result.Result[F,T]", "kind" : "def"}, {"label" : "mapOrElse", "tail" : "(default: (E) => U, f: (T) => U): U", "member" : "dev.jsbrucker.result.Result.mapOrElse", "link" : "dev\/jsbrucker\/result\/Err.html#mapOrElse[U](default:E=>U,f:T=>U):U", "kind" : "def"}, {"label" : "mapOr", "tail" : "(default: U, f: (T) => U): U", "member" : "dev.jsbrucker.result.Result.mapOr", "link" : "dev\/jsbrucker\/result\/Err.html#mapOr[U](default:U,f:T=>U):U", "kind" : "def"}, {"label" : "map", "tail" : "(op: (T) => U): Result[E, U]", "member" : "dev.jsbrucker.result.Result.map", "link" : "dev\/jsbrucker\/result\/Err.html#map[U](op:T=>U):dev.jsbrucker.result.Result[E,U]", "kind" : "def"}, {"label" : "transposeFutureErr", "tail" : "(ev: <:<[E, Future[F]], executor: ExecutionContext): Future[Result[F, T]]", "member" : "dev.jsbrucker.result.Result.transposeFutureErr", "link" : "dev\/jsbrucker\/result\/Err.html#transposeFutureErr[F](implicitev:E<:<scala.concurrent.Future[F],implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[dev.jsbrucker.result.Result[F,T]]", "kind" : "def"}, {"label" : "transposeFuture", "tail" : "(ev: <:<[T, Future[U]], executor: ExecutionContext): Future[Result[E, U]]", "member" : "dev.jsbrucker.result.Result.transposeFuture", "link" : "dev\/jsbrucker\/result\/Err.html#transposeFuture[U](implicitev:T<:<scala.concurrent.Future[U],implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[dev.jsbrucker.result.Result[E,U]]", "kind" : "def"}, {"label" : "transposeOptionErr", "tail" : "(ev: <:<[E, Option[F]]): Option[Result[F, T]]", "member" : "dev.jsbrucker.result.Result.transposeOptionErr", "link" : "dev\/jsbrucker\/result\/Err.html#transposeOptionErr[F](implicitev:E<:<Option[F]):Option[dev.jsbrucker.result.Result[F,T]]", "kind" : "def"}, {"label" : "transposeOption", "tail" : "(ev: <:<[T, Option[U]]): Option[Result[E, U]]", "member" : "dev.jsbrucker.result.Result.transposeOption", "link" : "dev\/jsbrucker\/result\/Err.html#transposeOption[U](implicitev:T<:<Option[U]):Option[dev.jsbrucker.result.Result[E,U]]", "kind" : "def"}, {"label" : "to", "tail" : "(fromResult: FromResult[E, T, V]): V", "member" : "dev.jsbrucker.result.Result.to", "link" : "dev\/jsbrucker\/result\/Err.html#to[V](implicitfromResult:dev.jsbrucker.result.FromResult[E,T,V]):V", "kind" : "def"}, {"label" : "toTry", "tail" : "(ev: <:<[E, Throwable]): Try[T]", "member" : "dev.jsbrucker.result.Result.toTry", "link" : "dev\/jsbrucker\/result\/Err.html#toTry(implicitev:E<:<Throwable):scala.util.Try[T]", "kind" : "def"}, {"label" : "toEither", "tail" : "(): Either[E, T]", "member" : "dev.jsbrucker.result.Result.toEither", "link" : "dev\/jsbrucker\/result\/Err.html#toEither:Either[E,T]", "kind" : "def"}, {"label" : "toSeqErr", "tail" : "(): Seq[E]", "member" : "dev.jsbrucker.result.Result.toSeqErr", "link" : "dev\/jsbrucker\/result\/Err.html#toSeqErr:Seq[E]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "dev.jsbrucker.result.Result.toSeq", "link" : "dev\/jsbrucker\/result\/Err.html#toSeq:Seq[T]", "kind" : "def"}, {"label" : "toOptionErr", "tail" : "(): Option[E]", "member" : "dev.jsbrucker.result.Result.toOptionErr", "link" : "dev\/jsbrucker\/result\/Err.html#toOptionErr:Option[E]", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[T]", "member" : "dev.jsbrucker.result.Result.toOption", "link" : "dev\/jsbrucker\/result\/Err.html#toOption:Option[T]", "kind" : "def"}, {"label" : "err", "tail" : "(): Option[E]", "member" : "dev.jsbrucker.result.Result.err", "link" : "dev\/jsbrucker\/result\/Err.html#err:Option[E]", "kind" : "final def"}, {"label" : "ok", "tail" : "(): Option[T]", "member" : "dev.jsbrucker.result.Result.ok", "link" : "dev\/jsbrucker\/result\/Err.html#ok:Option[T]", "kind" : "final def"}, {"label" : "intoErr", "tail" : "(ev: <:<[T, Nothing]): E", "member" : "dev.jsbrucker.result.Result.intoErr", "link" : "dev\/jsbrucker\/result\/Err.html#intoErr(implicitev:T<:<Nothing):E", "kind" : "def"}, {"label" : "intoOk", "tail" : "(ev: <:<[E, Nothing]): T", "member" : "dev.jsbrucker.result.Result.intoOk", "link" : "dev\/jsbrucker\/result\/Err.html#intoOk(implicitev:E<:<Nothing):T", "kind" : "def"}, {"label" : "intoOkOrErr", "tail" : "(vr: <:<[T, R], er: <:<[E, R]): R", "member" : "dev.jsbrucker.result.Result.intoOkOrErr", "link" : "dev\/jsbrucker\/result\/Err.html#intoOkOrErr[R](implicitvr:T<:<R,impliciter:E<:<R):R", "kind" : "def"}, {"label" : "unwrapErr", "tail" : "(): E", "member" : "dev.jsbrucker.result.Result.unwrapErr", "link" : "dev\/jsbrucker\/result\/Err.html#unwrapErr:E", "kind" : "def"}, {"label" : "expectErr", "tail" : "(msg: => String): E", "member" : "dev.jsbrucker.result.Result.expectErr", "link" : "dev\/jsbrucker\/result\/Err.html#expectErr(msg:=>String):E", "kind" : "def"}, {"label" : "unwrapOrElse", "tail" : "(op: (E) => U): U", "member" : "dev.jsbrucker.result.Result.unwrapOrElse", "link" : "dev\/jsbrucker\/result\/Err.html#unwrapOrElse[U>:T](op:E=>U):U", "kind" : "def"}, {"label" : "unwrapOr", "tail" : "(default: => U): U", "member" : "dev.jsbrucker.result.Result.unwrapOr", "link" : "dev\/jsbrucker\/result\/Err.html#unwrapOr[U>:T](default:=>U):U", "kind" : "def"}, {"label" : "unwrap", "tail" : "(): T", "member" : "dev.jsbrucker.result.Result.unwrap", "link" : "dev\/jsbrucker\/result\/Err.html#unwrap:T", "kind" : "def"}, {"label" : "expect", "tail" : "(msg: => String): T", "member" : "dev.jsbrucker.result.Result.expect", "link" : "dev\/jsbrucker\/result\/Err.html#expect(msg:=>String):T", "kind" : "def"}, {"label" : "containsErr", "tail" : "(x: => U): Boolean", "member" : "dev.jsbrucker.result.Result.containsErr", "link" : "dev\/jsbrucker\/result\/Err.html#containsErr[U>:E](x:=>U):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(x: => U): Boolean", "member" : "dev.jsbrucker.result.Result.contains", "link" : "dev\/jsbrucker\/result\/Err.html#contains[U>:T](x:=>U):Boolean", "kind" : "def"}, {"label" : "isErrOr", "tail" : "(f: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isErrOr", "link" : "dev\/jsbrucker\/result\/Err.html#isErrOr(f:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "isErrAnd", "tail" : "(f: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isErrAnd", "link" : "dev\/jsbrucker\/result\/Err.html#isErrAnd(f:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "isErr", "tail" : "(): Boolean", "member" : "dev.jsbrucker.result.Result.isErr", "link" : "dev\/jsbrucker\/result\/Err.html#isErr:Boolean", "kind" : "def"}, {"label" : "isOkOr", "tail" : "(f: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isOkOr", "link" : "dev\/jsbrucker\/result\/Err.html#isOkOr(f:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "isOkAnd", "tail" : "(f: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isOkAnd", "link" : "dev\/jsbrucker\/result\/Err.html#isOkAnd(f:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "isOk", "tail" : "(): Boolean", "member" : "dev.jsbrucker.result.Result.isOk", "link" : "dev\/jsbrucker\/result\/Err.html#isOk:Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "dev\/jsbrucker\/result\/Err.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "dev\/jsbrucker\/result\/Err.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/Err.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/Err.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "dev\/jsbrucker\/result\/Err.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "dev\/jsbrucker\/result\/Err.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "dev\/jsbrucker\/result\/Err.html", "kind" : "case class"}, {"name" : "dev.jsbrucker.result.FromResult", "object" : "dev\/jsbrucker\/result\/FromResult$.html", "members_object" : [{"label" : "tryFromResult", "tail" : "(): FromResult[Throwable, T, Try[T]]", "member" : "dev.jsbrucker.result.FromResult.tryFromResult", "link" : "dev\/jsbrucker\/result\/FromResult$.html#tryFromResult[T]:dev.jsbrucker.result.FromResult[Throwable,T,scala.util.Try[T]]", "kind" : "implicit def"}, {"label" : "eitherFromResult", "tail" : "(): FromResult[E, T, Either[E, T]]", "member" : "dev.jsbrucker.result.FromResult.eitherFromResult", "link" : "dev\/jsbrucker\/result\/FromResult$.html#eitherFromResult[E,T]:dev.jsbrucker.result.FromResult[E,T,Either[E,T]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/jsbrucker\/result\/FromResult$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/jsbrucker\/result\/FromResult$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/jsbrucker\/result\/FromResult$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/jsbrucker\/result\/FromResult$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/jsbrucker\/result\/FromResult$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/jsbrucker\/result\/FromResult$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/jsbrucker\/result\/FromResult$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/FromResult$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/FromResult$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/FromResult$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/jsbrucker\/result\/FromResult$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/jsbrucker\/result\/FromResult$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/jsbrucker\/result\/FromResult$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/jsbrucker\/result\/FromResult$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/jsbrucker\/result\/FromResult$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/jsbrucker\/result\/FromResult$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dev\/jsbrucker\/result\/FromResult$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/FromResult$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/FromResult$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "dev\/jsbrucker\/result\/FromResult.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/jsbrucker\/result\/FromResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/jsbrucker\/result\/FromResult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/jsbrucker\/result\/FromResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/jsbrucker\/result\/FromResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/jsbrucker\/result\/FromResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/jsbrucker\/result\/FromResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/jsbrucker\/result\/FromResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/FromResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/FromResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/FromResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/jsbrucker\/result\/FromResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/jsbrucker\/result\/FromResult.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/jsbrucker\/result\/FromResult.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/jsbrucker\/result\/FromResult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/jsbrucker\/result\/FromResult.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/jsbrucker\/result\/FromResult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dev\/jsbrucker\/result\/FromResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/FromResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/FromResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(result: Result[E, T]): V", "member" : "dev.jsbrucker.result.FromResult.apply", "link" : "dev\/jsbrucker\/result\/FromResult.html#apply(result:dev.jsbrucker.result.Result[E,T]):V", "kind" : "abstract def"}], "shortDescription" : "Used to convert a Result[E, T] to a value of type V"}, {"name" : "dev.jsbrucker.result.implicits", "shortDescription" : "Implicit definitions used to add extension methods", "object" : "dev\/jsbrucker\/result\/implicits$.html", "members_object" : [{"label" : "iterableOpsSyntax", "tail" : "", "member" : "dev.jsbrucker.result.extensions.iterable_ops.Syntax.iterableOpsSyntax", "link" : "dev\/jsbrucker\/result\/implicits$.html#iterableOpsSyntax[E,T,CC[_],C]extendsiterable_ops.Ops[E,T,[_]CC[_],C]", "kind" : "implicit class"}, {"label" : "Ops", "tail" : "", "member" : "dev.jsbrucker.result.extensions.option.Syntax.Ops", "link" : "dev\/jsbrucker\/result\/implicits$.html#Ops[V]extendsoption.Ops[V]", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/jsbrucker\/result\/implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/jsbrucker\/result\/implicits$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/jsbrucker\/result\/implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/jsbrucker\/result\/implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/jsbrucker\/result\/implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/jsbrucker\/result\/implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/jsbrucker\/result\/implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/jsbrucker\/result\/implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/jsbrucker\/result\/implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/jsbrucker\/result\/implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/jsbrucker\/result\/implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/jsbrucker\/result\/implicits$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/jsbrucker\/result\/implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dev\/jsbrucker\/result\/implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.jsbrucker.result.Ok", "shortDescription" : "Contains the success value", "object" : "dev\/jsbrucker\/result\/Ok$.html", "members_object" : [{"label" : "unit", "tail" : ": Ok[Nothing, Unit]", "member" : "dev.jsbrucker.result.Ok.unit", "link" : "dev\/jsbrucker\/result\/Ok$.html#unit:dev.jsbrucker.result.Ok[Nothing,Unit]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/jsbrucker\/result\/Ok$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/jsbrucker\/result\/Ok$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/jsbrucker\/result\/Ok$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/jsbrucker\/result\/Ok$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/jsbrucker\/result\/Ok$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/jsbrucker\/result\/Ok$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/jsbrucker\/result\/Ok$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/Ok$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/Ok$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/Ok$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/jsbrucker\/result\/Ok$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/jsbrucker\/result\/Ok$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/jsbrucker\/result\/Ok$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/jsbrucker\/result\/Ok$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/jsbrucker\/result\/Ok$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/jsbrucker\/result\/Ok$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dev\/jsbrucker\/result\/Ok$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/Ok$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/Ok$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "intoOk", "tail" : "(): T", "member" : "dev.jsbrucker.result.Ok.intoOk", "link" : "dev\/jsbrucker\/result\/Ok.html#intoOk:T", "kind" : "def"}, {"member" : "dev.jsbrucker.result.Ok#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": T", "member" : "dev.jsbrucker.result.Ok.v", "link" : "dev\/jsbrucker\/result\/Ok.html#v:T", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "dev\/jsbrucker\/result\/Ok.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "withErr", "tail" : "(): Result[F, T]", "member" : "dev.jsbrucker.result.Result.withErr", "link" : "dev\/jsbrucker\/result\/Ok.html#withErr[F>:E]:dev.jsbrucker.result.Result[F,T]", "kind" : "def"}, {"label" : "withOk", "tail" : "(): Result[E, U]", "member" : "dev.jsbrucker.result.Result.withOk", "link" : "dev\/jsbrucker\/result\/Ok.html#withOk[U>:T]:dev.jsbrucker.result.Result[E,U]", "kind" : "def"}, {"label" : "filterErrOrElse", "tail" : "(p: (E) => Boolean, default: => U): Result[E, U]", "member" : "dev.jsbrucker.result.Result.filterErrOrElse", "link" : "dev\/jsbrucker\/result\/Ok.html#filterErrOrElse[U>:T](p:E=>Boolean,default:=>U):dev.jsbrucker.result.Result[E,U]", "kind" : "def"}, {"label" : "filterOrElse", "tail" : "(p: (T) => Boolean, default: => F): Result[F, T]", "member" : "dev.jsbrucker.result.Result.filterOrElse", "link" : "dev\/jsbrucker\/result\/Ok.html#filterOrElse[F>:E](p:T=>Boolean,default:=>F):dev.jsbrucker.result.Result[F,T]", "kind" : "def"}, {"label" : "existsErr", "tail" : "(p: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.existsErr", "link" : "dev\/jsbrucker\/result\/Ok.html#existsErr(p:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.exists", "link" : "dev\/jsbrucker\/result\/Ok.html#exists(p:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "forallErr", "tail" : "(p: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.forallErr", "link" : "dev\/jsbrucker\/result\/Ok.html#forallErr(p:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.forall", "link" : "dev\/jsbrucker\/result\/Ok.html#forall(p:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreachErr", "tail" : "(op: (E) => F): Unit", "member" : "dev.jsbrucker.result.Result.foreachErr", "link" : "dev\/jsbrucker\/result\/Ok.html#foreachErr[F](op:E=>F):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(op: (T) => U): Unit", "member" : "dev.jsbrucker.result.Result.foreach", "link" : "dev\/jsbrucker\/result\/Ok.html#foreach[U](op:T=>U):Unit", "kind" : "def"}, {"label" : "inspectErr", "tail" : "(op: (E) => F): Unit", "member" : "dev.jsbrucker.result.Result.inspectErr", "link" : "dev\/jsbrucker\/result\/Ok.html#inspectErr[F](op:E=>F):Unit", "kind" : "def"}, {"label" : "inspect", "tail" : "(op: (T) => U): Unit", "member" : "dev.jsbrucker.result.Result.inspect", "link" : "dev\/jsbrucker\/result\/Ok.html#inspect[U](op:T=>U):Unit", "kind" : "def"}, {"label" : "flatMapErr", "tail" : "(op: (E) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flatMapErr", "link" : "dev\/jsbrucker\/result\/Ok.html#flatMapErr[F,U>:T](op:E=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(op: (T) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flatMap", "link" : "dev\/jsbrucker\/result\/Ok.html#flatMap[F>:E,U](op:T=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(op: (E) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.orElse", "link" : "dev\/jsbrucker\/result\/Ok.html#orElse[F,U>:T](op:E=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "or", "tail" : "(rhs: => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.or", "link" : "dev\/jsbrucker\/result\/Ok.html#or[F>:E,U>:T](rhs:=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "andThen", "tail" : "(op: (T) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.andThen", "link" : "dev\/jsbrucker\/result\/Ok.html#andThen[F>:E,U](op:T=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "and", "tail" : "(rhs: => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.and", "link" : "dev\/jsbrucker\/result\/Ok.html#and[F>:E,U>:T](rhs:=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "fold", "tail" : "(fErr: (E) => O, fOk: (T) => O): O", "member" : "dev.jsbrucker.result.Result.fold", "link" : "dev\/jsbrucker\/result\/Ok.html#fold[O](fErr:E=>O,fOk:T=>O):O", "kind" : "def"}, {"label" : "joinErr", "tail" : "(ev: <:<[E, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.joinErr", "link" : "dev\/jsbrucker\/result\/Ok.html#joinErr[F,U>:T](implicitev:E<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "joinOk", "tail" : "(ev: <:<[T, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.joinOk", "link" : "dev\/jsbrucker\/result\/Ok.html#joinOk[F>:E,U](implicitev:T<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "flattenErr", "tail" : "(ev: <:<[E, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flattenErr", "link" : "dev\/jsbrucker\/result\/Ok.html#flattenErr[F,U>:T](implicitev:E<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flatten", "link" : "dev\/jsbrucker\/result\/Ok.html#flatten[F>:E,U](implicitev:T<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "mapErrOrElse", "tail" : "(default: (T) => F, f: (E) => F): F", "member" : "dev.jsbrucker.result.Result.mapErrOrElse", "link" : "dev\/jsbrucker\/result\/Ok.html#mapErrOrElse[F](default:T=>F,f:E=>F):F", "kind" : "def"}, {"label" : "mapErrOr", "tail" : "(default: => F, f: (E) => F): F", "member" : "dev.jsbrucker.result.Result.mapErrOr", "link" : "dev\/jsbrucker\/result\/Ok.html#mapErrOr[F](default:=>F,f:E=>F):F", "kind" : "def"}, {"label" : "mapErr", "tail" : "(op: (E) => F): Result[F, T]", "member" : "dev.jsbrucker.result.Result.mapErr", "link" : "dev\/jsbrucker\/result\/Ok.html#mapErr[F](op:E=>F):dev.jsbrucker.result.Result[F,T]", "kind" : "def"}, {"label" : "mapOrElse", "tail" : "(default: (E) => U, f: (T) => U): U", "member" : "dev.jsbrucker.result.Result.mapOrElse", "link" : "dev\/jsbrucker\/result\/Ok.html#mapOrElse[U](default:E=>U,f:T=>U):U", "kind" : "def"}, {"label" : "mapOr", "tail" : "(default: U, f: (T) => U): U", "member" : "dev.jsbrucker.result.Result.mapOr", "link" : "dev\/jsbrucker\/result\/Ok.html#mapOr[U](default:U,f:T=>U):U", "kind" : "def"}, {"label" : "map", "tail" : "(op: (T) => U): Result[E, U]", "member" : "dev.jsbrucker.result.Result.map", "link" : "dev\/jsbrucker\/result\/Ok.html#map[U](op:T=>U):dev.jsbrucker.result.Result[E,U]", "kind" : "def"}, {"label" : "transposeFutureErr", "tail" : "(ev: <:<[E, Future[F]], executor: ExecutionContext): Future[Result[F, T]]", "member" : "dev.jsbrucker.result.Result.transposeFutureErr", "link" : "dev\/jsbrucker\/result\/Ok.html#transposeFutureErr[F](implicitev:E<:<scala.concurrent.Future[F],implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[dev.jsbrucker.result.Result[F,T]]", "kind" : "def"}, {"label" : "transposeFuture", "tail" : "(ev: <:<[T, Future[U]], executor: ExecutionContext): Future[Result[E, U]]", "member" : "dev.jsbrucker.result.Result.transposeFuture", "link" : "dev\/jsbrucker\/result\/Ok.html#transposeFuture[U](implicitev:T<:<scala.concurrent.Future[U],implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[dev.jsbrucker.result.Result[E,U]]", "kind" : "def"}, {"label" : "transposeOptionErr", "tail" : "(ev: <:<[E, Option[F]]): Option[Result[F, T]]", "member" : "dev.jsbrucker.result.Result.transposeOptionErr", "link" : "dev\/jsbrucker\/result\/Ok.html#transposeOptionErr[F](implicitev:E<:<Option[F]):Option[dev.jsbrucker.result.Result[F,T]]", "kind" : "def"}, {"label" : "transposeOption", "tail" : "(ev: <:<[T, Option[U]]): Option[Result[E, U]]", "member" : "dev.jsbrucker.result.Result.transposeOption", "link" : "dev\/jsbrucker\/result\/Ok.html#transposeOption[U](implicitev:T<:<Option[U]):Option[dev.jsbrucker.result.Result[E,U]]", "kind" : "def"}, {"label" : "to", "tail" : "(fromResult: FromResult[E, T, V]): V", "member" : "dev.jsbrucker.result.Result.to", "link" : "dev\/jsbrucker\/result\/Ok.html#to[V](implicitfromResult:dev.jsbrucker.result.FromResult[E,T,V]):V", "kind" : "def"}, {"label" : "toTry", "tail" : "(ev: <:<[E, Throwable]): Try[T]", "member" : "dev.jsbrucker.result.Result.toTry", "link" : "dev\/jsbrucker\/result\/Ok.html#toTry(implicitev:E<:<Throwable):scala.util.Try[T]", "kind" : "def"}, {"label" : "toEither", "tail" : "(): Either[E, T]", "member" : "dev.jsbrucker.result.Result.toEither", "link" : "dev\/jsbrucker\/result\/Ok.html#toEither:Either[E,T]", "kind" : "def"}, {"label" : "toSeqErr", "tail" : "(): Seq[E]", "member" : "dev.jsbrucker.result.Result.toSeqErr", "link" : "dev\/jsbrucker\/result\/Ok.html#toSeqErr:Seq[E]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "dev.jsbrucker.result.Result.toSeq", "link" : "dev\/jsbrucker\/result\/Ok.html#toSeq:Seq[T]", "kind" : "def"}, {"label" : "toOptionErr", "tail" : "(): Option[E]", "member" : "dev.jsbrucker.result.Result.toOptionErr", "link" : "dev\/jsbrucker\/result\/Ok.html#toOptionErr:Option[E]", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[T]", "member" : "dev.jsbrucker.result.Result.toOption", "link" : "dev\/jsbrucker\/result\/Ok.html#toOption:Option[T]", "kind" : "def"}, {"label" : "err", "tail" : "(): Option[E]", "member" : "dev.jsbrucker.result.Result.err", "link" : "dev\/jsbrucker\/result\/Ok.html#err:Option[E]", "kind" : "final def"}, {"label" : "ok", "tail" : "(): Option[T]", "member" : "dev.jsbrucker.result.Result.ok", "link" : "dev\/jsbrucker\/result\/Ok.html#ok:Option[T]", "kind" : "final def"}, {"label" : "intoErr", "tail" : "(ev: <:<[T, Nothing]): E", "member" : "dev.jsbrucker.result.Result.intoErr", "link" : "dev\/jsbrucker\/result\/Ok.html#intoErr(implicitev:T<:<Nothing):E", "kind" : "def"}, {"label" : "intoOk", "tail" : "(ev: <:<[E, Nothing]): T", "member" : "dev.jsbrucker.result.Result.intoOk", "link" : "dev\/jsbrucker\/result\/Ok.html#intoOk(implicitev:E<:<Nothing):T", "kind" : "def"}, {"label" : "intoOkOrErr", "tail" : "(vr: <:<[T, R], er: <:<[E, R]): R", "member" : "dev.jsbrucker.result.Result.intoOkOrErr", "link" : "dev\/jsbrucker\/result\/Ok.html#intoOkOrErr[R](implicitvr:T<:<R,impliciter:E<:<R):R", "kind" : "def"}, {"label" : "unwrapErr", "tail" : "(): E", "member" : "dev.jsbrucker.result.Result.unwrapErr", "link" : "dev\/jsbrucker\/result\/Ok.html#unwrapErr:E", "kind" : "def"}, {"label" : "expectErr", "tail" : "(msg: => String): E", "member" : "dev.jsbrucker.result.Result.expectErr", "link" : "dev\/jsbrucker\/result\/Ok.html#expectErr(msg:=>String):E", "kind" : "def"}, {"label" : "unwrapOrElse", "tail" : "(op: (E) => U): U", "member" : "dev.jsbrucker.result.Result.unwrapOrElse", "link" : "dev\/jsbrucker\/result\/Ok.html#unwrapOrElse[U>:T](op:E=>U):U", "kind" : "def"}, {"label" : "unwrapOr", "tail" : "(default: => U): U", "member" : "dev.jsbrucker.result.Result.unwrapOr", "link" : "dev\/jsbrucker\/result\/Ok.html#unwrapOr[U>:T](default:=>U):U", "kind" : "def"}, {"label" : "unwrap", "tail" : "(): T", "member" : "dev.jsbrucker.result.Result.unwrap", "link" : "dev\/jsbrucker\/result\/Ok.html#unwrap:T", "kind" : "def"}, {"label" : "expect", "tail" : "(msg: => String): T", "member" : "dev.jsbrucker.result.Result.expect", "link" : "dev\/jsbrucker\/result\/Ok.html#expect(msg:=>String):T", "kind" : "def"}, {"label" : "containsErr", "tail" : "(x: => U): Boolean", "member" : "dev.jsbrucker.result.Result.containsErr", "link" : "dev\/jsbrucker\/result\/Ok.html#containsErr[U>:E](x:=>U):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(x: => U): Boolean", "member" : "dev.jsbrucker.result.Result.contains", "link" : "dev\/jsbrucker\/result\/Ok.html#contains[U>:T](x:=>U):Boolean", "kind" : "def"}, {"label" : "isErrOr", "tail" : "(f: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isErrOr", "link" : "dev\/jsbrucker\/result\/Ok.html#isErrOr(f:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "isErrAnd", "tail" : "(f: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isErrAnd", "link" : "dev\/jsbrucker\/result\/Ok.html#isErrAnd(f:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "isErr", "tail" : "(): Boolean", "member" : "dev.jsbrucker.result.Result.isErr", "link" : "dev\/jsbrucker\/result\/Ok.html#isErr:Boolean", "kind" : "def"}, {"label" : "isOkOr", "tail" : "(f: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isOkOr", "link" : "dev\/jsbrucker\/result\/Ok.html#isOkOr(f:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "isOkAnd", "tail" : "(f: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isOkAnd", "link" : "dev\/jsbrucker\/result\/Ok.html#isOkAnd(f:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "isOk", "tail" : "(): Boolean", "member" : "dev.jsbrucker.result.Result.isOk", "link" : "dev\/jsbrucker\/result\/Ok.html#isOk:Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "dev\/jsbrucker\/result\/Ok.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "dev\/jsbrucker\/result\/Ok.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/Ok.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/Ok.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "dev\/jsbrucker\/result\/Ok.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "dev\/jsbrucker\/result\/Ok.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "dev\/jsbrucker\/result\/Ok.html", "kind" : "case class"}, {"name" : "dev.jsbrucker.result.Result", "object" : "dev\/jsbrucker\/result\/Result$.html", "members_object" : [{"label" : "apply", "tail" : "(value: V)(toResult: ToResult[E, T, V]): Result[E, T]", "member" : "dev.jsbrucker.result.Result.apply", "link" : "dev\/jsbrucker\/result\/Result$.html#apply[E,T,V](value:V)(implicittoResult:dev.jsbrucker.result.ToResult[E,T,V]):dev.jsbrucker.result.Result[E,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/jsbrucker\/result\/Result$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/jsbrucker\/result\/Result$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/jsbrucker\/result\/Result$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/jsbrucker\/result\/Result$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/jsbrucker\/result\/Result$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/jsbrucker\/result\/Result$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/jsbrucker\/result\/Result$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/Result$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/Result$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/Result$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/jsbrucker\/result\/Result$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/jsbrucker\/result\/Result$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/jsbrucker\/result\/Result$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/jsbrucker\/result\/Result$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/jsbrucker\/result\/Result$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/jsbrucker\/result\/Result$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dev\/jsbrucker\/result\/Result$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/Result$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/Result$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "dev\/jsbrucker\/result\/Result.html", "kind" : "trait", "members_trait" : [{"label" : "withErr", "tail" : "(): Result[F, T]", "member" : "dev.jsbrucker.result.Result.withErr", "link" : "dev\/jsbrucker\/result\/Result.html#withErr[F>:E]:dev.jsbrucker.result.Result[F,T]", "kind" : "def"}, {"label" : "withOk", "tail" : "(): Result[E, U]", "member" : "dev.jsbrucker.result.Result.withOk", "link" : "dev\/jsbrucker\/result\/Result.html#withOk[U>:T]:dev.jsbrucker.result.Result[E,U]", "kind" : "def"}, {"label" : "filterErrOrElse", "tail" : "(p: (E) => Boolean, default: => U): Result[E, U]", "member" : "dev.jsbrucker.result.Result.filterErrOrElse", "link" : "dev\/jsbrucker\/result\/Result.html#filterErrOrElse[U>:T](p:E=>Boolean,default:=>U):dev.jsbrucker.result.Result[E,U]", "kind" : "def"}, {"label" : "filterOrElse", "tail" : "(p: (T) => Boolean, default: => F): Result[F, T]", "member" : "dev.jsbrucker.result.Result.filterOrElse", "link" : "dev\/jsbrucker\/result\/Result.html#filterOrElse[F>:E](p:T=>Boolean,default:=>F):dev.jsbrucker.result.Result[F,T]", "kind" : "def"}, {"label" : "existsErr", "tail" : "(p: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.existsErr", "link" : "dev\/jsbrucker\/result\/Result.html#existsErr(p:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.exists", "link" : "dev\/jsbrucker\/result\/Result.html#exists(p:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "forallErr", "tail" : "(p: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.forallErr", "link" : "dev\/jsbrucker\/result\/Result.html#forallErr(p:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.forall", "link" : "dev\/jsbrucker\/result\/Result.html#forall(p:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreachErr", "tail" : "(op: (E) => F): Unit", "member" : "dev.jsbrucker.result.Result.foreachErr", "link" : "dev\/jsbrucker\/result\/Result.html#foreachErr[F](op:E=>F):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(op: (T) => U): Unit", "member" : "dev.jsbrucker.result.Result.foreach", "link" : "dev\/jsbrucker\/result\/Result.html#foreach[U](op:T=>U):Unit", "kind" : "def"}, {"label" : "inspectErr", "tail" : "(op: (E) => F): Unit", "member" : "dev.jsbrucker.result.Result.inspectErr", "link" : "dev\/jsbrucker\/result\/Result.html#inspectErr[F](op:E=>F):Unit", "kind" : "def"}, {"label" : "inspect", "tail" : "(op: (T) => U): Unit", "member" : "dev.jsbrucker.result.Result.inspect", "link" : "dev\/jsbrucker\/result\/Result.html#inspect[U](op:T=>U):Unit", "kind" : "def"}, {"label" : "flatMapErr", "tail" : "(op: (E) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flatMapErr", "link" : "dev\/jsbrucker\/result\/Result.html#flatMapErr[F,U>:T](op:E=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(op: (T) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flatMap", "link" : "dev\/jsbrucker\/result\/Result.html#flatMap[F>:E,U](op:T=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "orElse", "tail" : "(op: (E) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.orElse", "link" : "dev\/jsbrucker\/result\/Result.html#orElse[F,U>:T](op:E=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "or", "tail" : "(rhs: => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.or", "link" : "dev\/jsbrucker\/result\/Result.html#or[F>:E,U>:T](rhs:=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "andThen", "tail" : "(op: (T) => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.andThen", "link" : "dev\/jsbrucker\/result\/Result.html#andThen[F>:E,U](op:T=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "and", "tail" : "(rhs: => Result[F, U]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.and", "link" : "dev\/jsbrucker\/result\/Result.html#and[F>:E,U>:T](rhs:=>dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "fold", "tail" : "(fErr: (E) => O, fOk: (T) => O): O", "member" : "dev.jsbrucker.result.Result.fold", "link" : "dev\/jsbrucker\/result\/Result.html#fold[O](fErr:E=>O,fOk:T=>O):O", "kind" : "def"}, {"label" : "joinErr", "tail" : "(ev: <:<[E, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.joinErr", "link" : "dev\/jsbrucker\/result\/Result.html#joinErr[F,U>:T](implicitev:E<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "joinOk", "tail" : "(ev: <:<[T, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.joinOk", "link" : "dev\/jsbrucker\/result\/Result.html#joinOk[F>:E,U](implicitev:T<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "flattenErr", "tail" : "(ev: <:<[E, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flattenErr", "link" : "dev\/jsbrucker\/result\/Result.html#flattenErr[F,U>:T](implicitev:E<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[T, Result[F, U]]): Result[F, U]", "member" : "dev.jsbrucker.result.Result.flatten", "link" : "dev\/jsbrucker\/result\/Result.html#flatten[F>:E,U](implicitev:T<:<dev.jsbrucker.result.Result[F,U]):dev.jsbrucker.result.Result[F,U]", "kind" : "def"}, {"label" : "mapErrOrElse", "tail" : "(default: (T) => F, f: (E) => F): F", "member" : "dev.jsbrucker.result.Result.mapErrOrElse", "link" : "dev\/jsbrucker\/result\/Result.html#mapErrOrElse[F](default:T=>F,f:E=>F):F", "kind" : "def"}, {"label" : "mapErrOr", "tail" : "(default: => F, f: (E) => F): F", "member" : "dev.jsbrucker.result.Result.mapErrOr", "link" : "dev\/jsbrucker\/result\/Result.html#mapErrOr[F](default:=>F,f:E=>F):F", "kind" : "def"}, {"label" : "mapErr", "tail" : "(op: (E) => F): Result[F, T]", "member" : "dev.jsbrucker.result.Result.mapErr", "link" : "dev\/jsbrucker\/result\/Result.html#mapErr[F](op:E=>F):dev.jsbrucker.result.Result[F,T]", "kind" : "def"}, {"label" : "mapOrElse", "tail" : "(default: (E) => U, f: (T) => U): U", "member" : "dev.jsbrucker.result.Result.mapOrElse", "link" : "dev\/jsbrucker\/result\/Result.html#mapOrElse[U](default:E=>U,f:T=>U):U", "kind" : "def"}, {"label" : "mapOr", "tail" : "(default: U, f: (T) => U): U", "member" : "dev.jsbrucker.result.Result.mapOr", "link" : "dev\/jsbrucker\/result\/Result.html#mapOr[U](default:U,f:T=>U):U", "kind" : "def"}, {"label" : "map", "tail" : "(op: (T) => U): Result[E, U]", "member" : "dev.jsbrucker.result.Result.map", "link" : "dev\/jsbrucker\/result\/Result.html#map[U](op:T=>U):dev.jsbrucker.result.Result[E,U]", "kind" : "def"}, {"label" : "transposeFutureErr", "tail" : "(ev: <:<[E, Future[F]], executor: ExecutionContext): Future[Result[F, T]]", "member" : "dev.jsbrucker.result.Result.transposeFutureErr", "link" : "dev\/jsbrucker\/result\/Result.html#transposeFutureErr[F](implicitev:E<:<scala.concurrent.Future[F],implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[dev.jsbrucker.result.Result[F,T]]", "kind" : "def"}, {"label" : "transposeFuture", "tail" : "(ev: <:<[T, Future[U]], executor: ExecutionContext): Future[Result[E, U]]", "member" : "dev.jsbrucker.result.Result.transposeFuture", "link" : "dev\/jsbrucker\/result\/Result.html#transposeFuture[U](implicitev:T<:<scala.concurrent.Future[U],implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[dev.jsbrucker.result.Result[E,U]]", "kind" : "def"}, {"label" : "transposeOptionErr", "tail" : "(ev: <:<[E, Option[F]]): Option[Result[F, T]]", "member" : "dev.jsbrucker.result.Result.transposeOptionErr", "link" : "dev\/jsbrucker\/result\/Result.html#transposeOptionErr[F](implicitev:E<:<Option[F]):Option[dev.jsbrucker.result.Result[F,T]]", "kind" : "def"}, {"label" : "transposeOption", "tail" : "(ev: <:<[T, Option[U]]): Option[Result[E, U]]", "member" : "dev.jsbrucker.result.Result.transposeOption", "link" : "dev\/jsbrucker\/result\/Result.html#transposeOption[U](implicitev:T<:<Option[U]):Option[dev.jsbrucker.result.Result[E,U]]", "kind" : "def"}, {"label" : "to", "tail" : "(fromResult: FromResult[E, T, V]): V", "member" : "dev.jsbrucker.result.Result.to", "link" : "dev\/jsbrucker\/result\/Result.html#to[V](implicitfromResult:dev.jsbrucker.result.FromResult[E,T,V]):V", "kind" : "def"}, {"label" : "toTry", "tail" : "(ev: <:<[E, Throwable]): Try[T]", "member" : "dev.jsbrucker.result.Result.toTry", "link" : "dev\/jsbrucker\/result\/Result.html#toTry(implicitev:E<:<Throwable):scala.util.Try[T]", "kind" : "def"}, {"label" : "toEither", "tail" : "(): Either[E, T]", "member" : "dev.jsbrucker.result.Result.toEither", "link" : "dev\/jsbrucker\/result\/Result.html#toEither:Either[E,T]", "kind" : "def"}, {"label" : "toSeqErr", "tail" : "(): Seq[E]", "member" : "dev.jsbrucker.result.Result.toSeqErr", "link" : "dev\/jsbrucker\/result\/Result.html#toSeqErr:Seq[E]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "dev.jsbrucker.result.Result.toSeq", "link" : "dev\/jsbrucker\/result\/Result.html#toSeq:Seq[T]", "kind" : "def"}, {"label" : "toOptionErr", "tail" : "(): Option[E]", "member" : "dev.jsbrucker.result.Result.toOptionErr", "link" : "dev\/jsbrucker\/result\/Result.html#toOptionErr:Option[E]", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[T]", "member" : "dev.jsbrucker.result.Result.toOption", "link" : "dev\/jsbrucker\/result\/Result.html#toOption:Option[T]", "kind" : "def"}, {"label" : "err", "tail" : "(): Option[E]", "member" : "dev.jsbrucker.result.Result.err", "link" : "dev\/jsbrucker\/result\/Result.html#err:Option[E]", "kind" : "final def"}, {"label" : "ok", "tail" : "(): Option[T]", "member" : "dev.jsbrucker.result.Result.ok", "link" : "dev\/jsbrucker\/result\/Result.html#ok:Option[T]", "kind" : "final def"}, {"label" : "intoErr", "tail" : "(ev: <:<[T, Nothing]): E", "member" : "dev.jsbrucker.result.Result.intoErr", "link" : "dev\/jsbrucker\/result\/Result.html#intoErr(implicitev:T<:<Nothing):E", "kind" : "def"}, {"label" : "intoOk", "tail" : "(ev: <:<[E, Nothing]): T", "member" : "dev.jsbrucker.result.Result.intoOk", "link" : "dev\/jsbrucker\/result\/Result.html#intoOk(implicitev:E<:<Nothing):T", "kind" : "def"}, {"label" : "intoOkOrErr", "tail" : "(vr: <:<[T, R], er: <:<[E, R]): R", "member" : "dev.jsbrucker.result.Result.intoOkOrErr", "link" : "dev\/jsbrucker\/result\/Result.html#intoOkOrErr[R](implicitvr:T<:<R,impliciter:E<:<R):R", "kind" : "def"}, {"label" : "unwrapErr", "tail" : "(): E", "member" : "dev.jsbrucker.result.Result.unwrapErr", "link" : "dev\/jsbrucker\/result\/Result.html#unwrapErr:E", "kind" : "def"}, {"label" : "expectErr", "tail" : "(msg: => String): E", "member" : "dev.jsbrucker.result.Result.expectErr", "link" : "dev\/jsbrucker\/result\/Result.html#expectErr(msg:=>String):E", "kind" : "def"}, {"label" : "unwrapOrElse", "tail" : "(op: (E) => U): U", "member" : "dev.jsbrucker.result.Result.unwrapOrElse", "link" : "dev\/jsbrucker\/result\/Result.html#unwrapOrElse[U>:T](op:E=>U):U", "kind" : "def"}, {"label" : "unwrapOr", "tail" : "(default: => U): U", "member" : "dev.jsbrucker.result.Result.unwrapOr", "link" : "dev\/jsbrucker\/result\/Result.html#unwrapOr[U>:T](default:=>U):U", "kind" : "def"}, {"label" : "unwrap", "tail" : "(): T", "member" : "dev.jsbrucker.result.Result.unwrap", "link" : "dev\/jsbrucker\/result\/Result.html#unwrap:T", "kind" : "def"}, {"label" : "expect", "tail" : "(msg: => String): T", "member" : "dev.jsbrucker.result.Result.expect", "link" : "dev\/jsbrucker\/result\/Result.html#expect(msg:=>String):T", "kind" : "def"}, {"label" : "containsErr", "tail" : "(x: => U): Boolean", "member" : "dev.jsbrucker.result.Result.containsErr", "link" : "dev\/jsbrucker\/result\/Result.html#containsErr[U>:E](x:=>U):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(x: => U): Boolean", "member" : "dev.jsbrucker.result.Result.contains", "link" : "dev\/jsbrucker\/result\/Result.html#contains[U>:T](x:=>U):Boolean", "kind" : "def"}, {"label" : "isErrOr", "tail" : "(f: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isErrOr", "link" : "dev\/jsbrucker\/result\/Result.html#isErrOr(f:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "isErrAnd", "tail" : "(f: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isErrAnd", "link" : "dev\/jsbrucker\/result\/Result.html#isErrAnd(f:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "isErr", "tail" : "(): Boolean", "member" : "dev.jsbrucker.result.Result.isErr", "link" : "dev\/jsbrucker\/result\/Result.html#isErr:Boolean", "kind" : "def"}, {"label" : "isOkOr", "tail" : "(f: (E) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isOkOr", "link" : "dev\/jsbrucker\/result\/Result.html#isOkOr(f:E=>Boolean):Boolean", "kind" : "def"}, {"label" : "isOkAnd", "tail" : "(f: (T) => Boolean): Boolean", "member" : "dev.jsbrucker.result.Result.isOkAnd", "link" : "dev\/jsbrucker\/result\/Result.html#isOkAnd(f:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "isOk", "tail" : "(): Boolean", "member" : "dev.jsbrucker.result.Result.isOk", "link" : "dev\/jsbrucker\/result\/Result.html#isOk:Boolean", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "dev\/jsbrucker\/result\/Result.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/Result.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/Result.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "dev\/jsbrucker\/result\/Result.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.Any.hashCode", "link" : "dev\/jsbrucker\/result\/Result.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.equals", "link" : "dev\/jsbrucker\/result\/Result.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "dev\/jsbrucker\/result\/Result.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "dev\/jsbrucker\/result\/Result.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.Any.getClass", "link" : "dev\/jsbrucker\/result\/Result.html#getClass():Class[_]", "kind" : "abstract def"}], "shortDescription" : "A Rust Result<T, E> inspired interface for handling results."}, {"name" : "dev.jsbrucker.result.ToResult", "object" : "dev\/jsbrucker\/result\/ToResult$.html", "members_object" : [{"label" : "booleanToResult", "tail" : ": ToResult[Unit, Unit, Boolean]", "member" : "dev.jsbrucker.result.ToResult.booleanToResult", "link" : "dev\/jsbrucker\/result\/ToResult$.html#booleanToResult:dev.jsbrucker.result.ToResult[Unit,Unit,Boolean]", "kind" : "implicit val"}, {"label" : "tryToResult", "tail" : "(): ToResult[Throwable, T, Try[T]]", "member" : "dev.jsbrucker.result.ToResult.tryToResult", "link" : "dev\/jsbrucker\/result\/ToResult$.html#tryToResult[T]:dev.jsbrucker.result.ToResult[Throwable,T,scala.util.Try[T]]", "kind" : "implicit def"}, {"label" : "eitherToResult", "tail" : "(): ToResult[E, T, Either[E, T]]", "member" : "dev.jsbrucker.result.ToResult.eitherToResult", "link" : "dev\/jsbrucker\/result\/ToResult$.html#eitherToResult[E,T]:dev.jsbrucker.result.ToResult[E,T,Either[E,T]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/jsbrucker\/result\/ToResult$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/jsbrucker\/result\/ToResult$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/jsbrucker\/result\/ToResult$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/jsbrucker\/result\/ToResult$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/jsbrucker\/result\/ToResult$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/jsbrucker\/result\/ToResult$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/jsbrucker\/result\/ToResult$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/ToResult$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/ToResult$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/ToResult$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/jsbrucker\/result\/ToResult$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/jsbrucker\/result\/ToResult$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/jsbrucker\/result\/ToResult$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/jsbrucker\/result\/ToResult$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/jsbrucker\/result\/ToResult$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/jsbrucker\/result\/ToResult$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dev\/jsbrucker\/result\/ToResult$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/ToResult$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/ToResult$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "dev\/jsbrucker\/result\/ToResult.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/jsbrucker\/result\/ToResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/jsbrucker\/result\/ToResult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/jsbrucker\/result\/ToResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/jsbrucker\/result\/ToResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/jsbrucker\/result\/ToResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/jsbrucker\/result\/ToResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/jsbrucker\/result\/ToResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/ToResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/ToResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/ToResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/jsbrucker\/result\/ToResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/jsbrucker\/result\/ToResult.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/jsbrucker\/result\/ToResult.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/jsbrucker\/result\/ToResult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/jsbrucker\/result\/ToResult.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/jsbrucker\/result\/ToResult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dev\/jsbrucker\/result\/ToResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/ToResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/ToResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(value: V): Result[E, T]", "member" : "dev.jsbrucker.result.ToResult.apply", "link" : "dev\/jsbrucker\/result\/ToResult.html#apply(value:V):dev.jsbrucker.result.Result[E,T]", "kind" : "abstract def"}], "shortDescription" : "Used to convert a value of type V to a Result[E, T]"}], "dev.jsbrucker.result.extensions" : [{"name" : "dev.jsbrucker.result.extensions.all", "shortDescription" : "", "object" : "dev\/jsbrucker\/result\/extensions\/all$.html", "members_object" : [{"label" : "Ops", "tail" : "", "member" : "dev.jsbrucker.result.extensions.all.Ops", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#Ops[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/extensions\/all$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.jsbrucker.result.extensions.iterable_ops", "shortDescription" : "", "object" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html", "members_object" : [{"label" : "Ops", "tail" : "", "member" : "dev.jsbrucker.result.extensions.iterable_ops.Ops", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#Ops[E,T,CC[_],C]extendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/extensions\/iterable_ops$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.jsbrucker.result.extensions.option", "shortDescription" : "", "object" : "dev\/jsbrucker\/result\/extensions\/option$.html", "members_object" : [{"label" : "Ops", "tail" : "", "member" : "dev.jsbrucker.result.extensions.option.Ops", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#Ops[V]extendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/jsbrucker\/result\/extensions\/option$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};